---
- name: nginx_ingress_controller | Templating manifests
  template: 
    src: "{{ item }}"
    dest: "/tmp/{{ item | regex_replace('.j2', '') }}"
  with_items:
    - default-backend-controller.yml.j2
    - default-backend-service.yml.j2
    - nginx-ingress-clusterolebinding.yml.j2
    - nginx-ingress-configmap.yml.j2
    - nginx-ingress-sa.yml.j2
    - nginx-ingress-clusterole.yml.j2
    - nginx-ingress-controller.yml.j2
    - nginx-ingress-service.yml.j2
  when: inventory_hostname == groups["masters"][0]

- name: nginx_ingress_controller | Deploy the nginx_ingress_controller
  kube:
    name: "{{ item.name }}"
    resource: "{{ item.type }}"
    filename: "{{ item.file }}"
    state: latest
  with_items:
    - { 'name': 'default-http-backend', 'type': 'deploy', 'file': '/tmp/default-backend-controller.yml' }
    - { 'name': 'default-http-backend', 'type': 'svc', 'file': '/tmp/default-backend-service.yml' }
    - { 'name': 'ingress', 'type': 'clusterrolebinding', 'file': '/tmp/nginx-ingress-clusterolebinding.yml' }
    - { 'name': 'system:ingress', 'type': 'clusterrole', 'file': '/tmp/nginx-ingress-clusterole.yml' }
    - { 'name': 'ingress', 'type': 'sa', 'file': '/tmp/nginx-ingress-sa.yml' }
    - { 'name': 'nginx-ingress-cfg', 'type': 'configmap', 'file': '/tmp/nginx-ingress-configmap.yml' }
    - { 'name': 'nginx-ingress-controller', 'type': 'deploy', 'file': '/tmp/nginx-ingress-controller.yml' }
    - { 'name': 'nginx-ingress', 'type': 'svc', 'file': '/tmp/nginx-ingress-service.yml' }
  when: inventory_hostname == groups["masters"][0]

- name: nginx_ingress_controller | Removing manifest
  file:
    src: "/tmp/{{ item }}"
    state: absent
  with_items:
    - default-backend-controller.yml
    - default-backend-service.yml
    - nginx-ingress-clusterolebinding.yml
    - nginx-ingress-configmap.yml
    - nginx-ingress-sa.yml
    - nginx-ingress-clusterole.yml
    - nginx-ingress-controller.yml
    - nginx-ingress-service.yml
  when: inventory_hostname == groups["masters"][0]

