---
- name: Kubernetes installation
  block:

  - name: Adding Kubernetes official gpg key (without proxy)
    apt_key:
      url: "{{ kubernetes_apt_key }}"
      state: present
    when: "'proxy' in group_names"

  - name: Adding Kubernetes official gpg key (with proxy)
    apt_key:
      url: "{{ kubernetes_apt_key }}"
      state: present
    environment:
      https_proxy: "http://{{ hostvars[groups['proxy'][0]]['ansible_tun0']['ipv4']['address'] }}:8888"
    when: "'workers' in group_names or 'masters' in group_names"

  - name: Setting Kubernetes repository depending Ubuntu version
    set_fact:
      kubernetes_repository: "deb http://apt.kubernetes.io/ kubernetes-{{ kubernetes_release }} {{ kubernetes_apt_channel }}"

  - name: Checking Kubernetes repostiory
    debug: var=kubernetes_repository

  - name: Adding Kubernetes repository
    apt_repository:
      repo: "{{ kubernetes_repository }}"
      state: present
      filename: 'kubernetes'

  - name: Installing kubernetes core components (kubectl, kubelet ...)
    apt:
      name: "{{ item }}"
      state: latest
    with_items:
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni

   - name: Checking if first master was initialized
     stat: /etc/kubernetes
     register: kubernetes_directory
     when: inventory_hostname == groups["masters"][0]

   - name: Kubeadm init on first master
     shell: "kubeadm init --apiserver-advertise-address={{ vpn_ip }} --pod-network-cidr={{ calico-cidr }} --kubernetes-version {{ kubernetes_version}}"
     when:
       - kubenetes_directory.stat.exists == False
       - inventory_hostname == groups["masters"][0]

   - name: Creating .kube file in $HOME
     file:
       path: ~/.kube
       state: directory
     when:
       - inventory_hostname == groups["masters"][0]

   - name: Copying /etc/kubernetes/admin.conf to ~/.kube/config
     copy:
       src: /etc/kubernetes/admin.conf
       dest: ~/.kube/config
     when:
       - inventory_hostname == groups["masters"][0]

   - name: Running first kubectl
     shell: "kubectl get nodes"
     register: first_kubectl
     when:
       - inventory_hostname == groups["masters"][0]

   - name: Checking kubectl
     debug: var=kubectl
     when:
       - inventory_hostname == groups["masters"][0]

  when: ansible_distribution == "Ubuntu"
