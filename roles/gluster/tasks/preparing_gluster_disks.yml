---
- name: gluster | Parting multipath device (creating primary partition on all gluster disks)
  parted:
    device: "/dev/mapper/{{ item.value.holders[0] }}"
    number: 1
    state: present
  when: item.value.size == "{{ gluster_disk_size }}.00 GB"
  with_dict: "{{ ansible_devices }}"

- name: gluster | Registering multipath partition finding all multipath devices with a primary partition
  set_fact:
    dm_create_on: "{{ item }}" 
  when: item.value.size == "{{ gluster_disk_size }}.00 GB"
  with_dict: "{{ ansible_devices }}"
  register: dm_create_on_result

- name: gluster | Printing disk fact
  debug: var=dm_create_on

- name: gluster | Creating filesystems on gluster primary partitions
  filesystem:
    fstype: ext4
    dev: "/dev/mapper/{{ item }}1"
  with_items:
    - "{{ dm_create_on.value.holders }}"

- name: gluster | Creating brick fs directories
  file:
     path: "{{ brick_directory }}/gvol_{{ item }}"
     state: directory
  with_items:
    - "{{ groups.gluster_main[0] }}"

    
- name: gluster | Mounting brick fs direcotrties
  mount:
    path: "{{ brick_directory }}/gvol_{{ item[1] }}"
    src: "/dev/mapper/{{ item[0] }}1"
    fstype: ext4
    state: mounted
  with_nested:
    - "{{ dm_create_on.value.holders }}"
    - "{{ groups.gluster_main[0] }}"

- name: gluster | Creating docker dirs in fs
  file:
    path: "{{ brick_directory }}/gvol_{{ item }}/docker"
    state: directory
  with_items:
    - "{{ groups.gluster_main[0] }}"

